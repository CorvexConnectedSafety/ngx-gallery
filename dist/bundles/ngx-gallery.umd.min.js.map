{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://ngx-gallery/src/ngx-gallery-action.component.ts","ng://ngx-gallery/src/ngx-gallery-arrows.component.ts","ng://ngx-gallery/src/ngx-gallery-bullets.component.ts","ng://ngx-gallery/src/ngx-gallery-helper.service.ts","ng://ngx-gallery/src/ngx-gallery-animation.model.ts","ng://ngx-gallery/src/ngx-gallery-image.component.ts","ng://ngx-gallery/src/ngx-gallery-order.model.ts","ng://ngx-gallery/src/ngx-gallery-thumbnails.component.ts","ng://ngx-gallery/src/ngx-gallery-preview.component.ts","ng://ngx-gallery/src/ngx-gallery-image-size.model.ts","ng://ngx-gallery/src/ngx-gallery-layout.model.ts","ng://ngx-gallery/src/ngx-gallery-action.model.ts","ng://ngx-gallery/src/ngx-gallery-options.model.ts","ng://ngx-gallery/src/ngx-gallery-ordered-image.model.ts","ng://ngx-gallery/src/ngx-gallery.component.ts","ng://ngx-gallery/src/ngx-gallery-image.model.ts","ng://ngx-gallery/src/index.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","create","__read","o","n","m","Symbol","iterator","r","e","i","ar","next","done","push","value","error","NgxGalleryActionComponent","this","disabled","titleText","onClick","EventEmitter","handleClick","event","emit","stopPropagation","preventDefault","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","Input","Output","NgxGalleryArrowsComponent","onPrevClick","onNextClick","handlePrevClick","handleNextClick","NgxGalleryBulletsComponent","active","onChange","getBullets","count","handleChange","index","NgxGalleryHelperService","renderer","swipeHandlers","Map","manageSwipe","status","element","id","nextHandler","prevHandler","handlers","getSwipeHandlers","set","listen","nativeElement","map","handler","removeSwipeHandlers","validateUrl","url","replace","RegExp","getBackgroundUrl","image","get","delete","Renderer2","Injectable","NgxGalleryAnimation","Fade","Slide","Rotate","Zoom","NgxGalleryImageComponent","sanitization","elementRef","helperService","onActiveChange","canChangeImage","ngOnInit","arrows","arrowsAutoHide","autoPlay","startAutoPlay","ngOnChanges","changes","_this","swipe","showNext","showPrev","onMouseEnter","autoPlayPauseOnHover","stopAutoPlay","onMouseLeave","reset","selectedIndex","getImages","images","lazyLoading","indexes_1","prevIndex","infinityMove","length","nextIndex","filter","img","indexOf","timer","setInterval","autoPlayInterval","clearInterval","clickable","show","setChangeTimeout","canShowNext","canShowPrev","timeout","animation","setTimeout","getSafeUrl","bypassSecurityTrustStyle","DomSanitizer","ElementRef","HostListener","NgxGalleryOrder","Column","Row","Page","NgxGalleryThumbnailsComponent","minStopIndex","validateIndex","moveRight","moveLeft","remainingCountValue","rows","columns","mouseenter","setDefaultPosition","remainingCount","slice","order","stopIndex","moveSize","hasLink","links","canMoveRight","maxIndex","getMaxIndex","setThumbnailsPosition","canMoveLeft","getThumbnailLeft","calculatedIndex","Math","floor","ceil","getThumbnailPosition","getThumbnailTop","getThumbnailWidth","getThumbnailDimension","getThumbnailHeight","thumbnailsLeft","thumbnailsMarginLeft","margin","canShowArrows","getVisibleCount","newIndex","getSafeStyle","NgxGalleryPreviewComponent","changeDetectorRef","showSpinner","positionLeft","positionTop","zoomValue","loading","rotateValue","onOpen","onClose","isOpen","initialX","initialY","initialLeft","initialTop","isMove","ngOnDestroy","keyDownListener","onKeyDown","keyboardNavigation","isKeyboardPrev","isKeyboardNext","closeOnEsc","isKeyboardEsc","close","open","forceFullscreen","manageFullscreen","closeFullscreen","imageMouseEnter","imageMouseLeave","clearTimeout","showAtIndex","fullscreen","doc","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","openFullscreen","substr","bypassSecurityTrustUrl","zoomIn","canZoomIn","zoomStep","zoomMax","zoomOut","canZoomOut","zoomMin","resetPosition","rotateLeft","rotateRight","getTransform","canDragOnZoom","zoom","mouseDownHandler","getClientX","getClientY","mouseUpHandler","mouseMoveHandler","touches","clientX","clientY","keyCode","documentElement","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","isFullscreen","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","first","_show","src","srcIndex","description","descriptions","markForCheck","isLoaded","previewImage","onload","complete","naturalWidth","ChangeDetectorRef","ViewChild","NgxGalleryImageSize","Cover","Contain","NgxGalleryLayout","ThumbnailsTop","ThumbnailsBottom","action","icon","obj","preventDefaults","undefined","breakpoint","use","source","defaultValue","width","height","fullWidth","layout","startIndex","linkTarget","imagePercent","imageArrows","imageArrowsAutoHide","imageSwipe","imageAnimation","imageSize","imageAutoPlay","imageAutoPlayInterval","imageAutoPlayPauseOnHover","imageInfinityMove","imageActions","NgxGalleryAction","imageDescription","imageBullets","thumbnails","thumbnailsColumns","thumbnailsRows","thumbnailsPercent","thumbnailsMargin","thumbnailsArrows","thumbnailsArrowsAutoHide","thumbnailsSwipe","thumbnailsMoveSize","thumbnailsOrder","thumbnailsRemainingCount","thumbnailsAsLinks","thumbnailsAutoHide","thumbnailMargin","thumbnailSize","thumbnailActions","preview","previewDescription","previewArrows","previewArrowsAutoHide","previewSwipe","previewFullscreen","previewForceFullscreen","previewCloseOnClick","previewCloseOnEsc","previewKeyboardNavigation","previewAnimation","previewAutoPlay","previewAutoPlayInterval","previewAutoPlayPauseOnHover","previewInfinityMove","previewZoom","previewZoomStep","previewZoomMax","previewZoomMin","previewRotate","previewDownload","previewCustom","previewBullets","arrowPrevIcon","arrowNextIcon","closeIcon","fullscreenIcon","spinnerIcon","zoomInIcon","zoomOutIcon","rotateLeftIcon","rotateRightIcon","downloadIcon","actions","NgxGalleryComponent","myElement","imagesReady","change","previewOpen","previewClose","previewChange","oldImagesLength","prevBreakpoint","options","opt","NgxGalleryOptions","sortOptions","setBreakpoint","setOptions","checkFullWidth","currentOptions","ngDoCheck","oldImages","setImages","resetThumbnails","ngAfterViewInit","onResize","fullWidthTimeout","getImageHeight","getThumbnailsHeight","getThumbnailsMarginTop","getThumbnailsMarginBottom","openPreview","previewEnabled","onPreviewOpen","onPreviewClose","selectFromImage","select","selectFromThumbnails","previewSelect","moveThumbnailsRight","thubmnails","moveThumbnailsLeft","canMoveThumbnailsRight","canMoveThumbnailsLeft","body","clientWidth","left","parentNode","innerWidth","smallImages","small","mediumImages","NgxGalleryOrderedImage","medium","bigImages","big","labels","label","breakpoints","window","pop","arguments","concat","__spread","a","sort","combineOptions","second","keys","val","providers","HostBinding","CustomHammerConfig","_super","apply","overrides","pinch","enable","rotate","TypeError","String","__","constructor","__extends","HammerGestureConfig","NgxGalleryModule","NgModule","imports","CommonModule","declarations","exports","provide","HAMMER_GESTURE_CONFIG","useClass"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n    selector: 'ngx-gallery-action',\n    template: `\n        <div class=\"ngx-gallery-icon\" [class.ngx-gallery-icon-disabled]=\"disabled\"\n            aria-hidden=\"true\"\n            title=\"{{ titleText }}\"\n            (click)=\"handleClick($event)\">\n                <i class=\"ngx-gallery-icon-content {{ icon }}\"></i>\n        </div>`,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxGalleryActionComponent {\n    @Input() icon: string;\n    @Input() disabled = false;\n    @Input() titleText = '';\n\n    @Output() onClick: EventEmitter<Event> = new EventEmitter();\n\n    handleClick(event: Event) {\n        if (!this.disabled) {\n            this.onClick.emit(event);\n        }\n\n        event.stopPropagation();\n        event.preventDefault();\n    }\n}\n","import { Component, Input, Output, EventEmitter, } from '@angular/core';\n\n@Component({\n    selector: 'ngx-gallery-arrows',\n    template: `\n        <div class=\"ngx-gallery-arrow-wrapper ngx-gallery-arrow-left\">\n            <div class=\"ngx-gallery-icon ngx-gallery-arrow\" aria-hidden=\"true\" (click)=\"handlePrevClick()\" [class.ngx-gallery-disabled]=\"prevDisabled\">\n                <i class=\"ngx-gallery-icon-content {{arrowPrevIcon}}\"></i>\n            </div>\n        </div>\n        <div class=\"ngx-gallery-arrow-wrapper ngx-gallery-arrow-right\">\n            <div class=\"ngx-gallery-icon ngx-gallery-arrow\" aria-hidden=\"true\" (click)=\"handleNextClick()\" [class.ngx-gallery-disabled]=\"nextDisabled\">\n                <i class=\"ngx-gallery-icon-content {{arrowNextIcon}}\"></i>\n            </div>\n        </div>\n    `,\n    styleUrls: ['./ngx-gallery-arrows.component.scss']\n})\nexport class NgxGalleryArrowsComponent {\n    @Input() prevDisabled: boolean;\n    @Input() nextDisabled: boolean;\n    @Input() arrowPrevIcon: string;\n    @Input() arrowNextIcon: string;\n\n    @Output() onPrevClick = new EventEmitter();\n    @Output() onNextClick = new EventEmitter();\n\n    handlePrevClick(): void {\n        this.onPrevClick.emit();\n    }\n\n    handleNextClick(): void {\n        this.onNextClick.emit();\n    }\n}\n","import { Component, Input, Output, EventEmitter, } from '@angular/core';\n\n@Component({\n    selector: 'ngx-gallery-bullets',\n    template: `\n        <div class=\"ngx-gallery-bullet\" *ngFor=\"let bullet of getBullets(); let i = index;\" (click)=\"handleChange($event, i)\" [ngClass]=\"{ 'ngx-gallery-active': i == active }\"></div>\n    `,\n    styleUrls: ['./ngx-gallery-bullets.component.scss']\n})\nexport class NgxGalleryBulletsComponent {\n    @Input() count: number;\n    @Input() active: number = 0;\n\n    @Output() onChange = new EventEmitter();\n\n    getBullets(): number[] {\n        return Array(this.count);\n    }\n\n    handleChange(event: Event, index: number): void {\n        this.onChange.emit(index);\n    }\n}\n","import { Injectable, ElementRef, Renderer2 } from '@angular/core';\n\n@Injectable()\nexport class NgxGalleryHelperService {\n\n    private swipeHandlers: Map<string, Function[]> = new Map<string, Function[]>();\n\n    constructor(private renderer: Renderer2) {}\n\n    manageSwipe(status: boolean, element: ElementRef, id: string, nextHandler: Function, prevHandler: Function): void {\n\n        const handlers = this.getSwipeHandlers(id);\n\n        // swipeleft and swiperight are available only if hammerjs is included\n        try {\n            if (status && !handlers) {\n                this.swipeHandlers.set(id, [\n                    this.renderer.listen(element.nativeElement, 'swipeleft', () => nextHandler()),\n                    this.renderer.listen(element.nativeElement, 'swiperight', () => prevHandler())\n                ]);\n            } else if (!status && handlers) {\n                handlers.map((handler) => handler());\n                this.removeSwipeHandlers(id);\n            }\n        } catch (e) {}\n    }\n\n    validateUrl(url: string): string {\n        if (url.replace) {\n            return url.replace(new RegExp(' ', 'g'), '%20')\n                .replace(new RegExp('\\'', 'g'), '%27');\n        } else {\n            return url;\n        }\n    }\n\n    getBackgroundUrl(image: string) {\n        return 'url(\\'' + this.validateUrl(image) + '\\')';\n    }\n\n    private getSwipeHandlers(id: string): Function[] | undefined {\n        return this.swipeHandlers.get(id);\n    }\n\n    private removeSwipeHandlers(id: string): void {\n        this.swipeHandlers.delete(id);\n    }\n}\n","export class NgxGalleryAnimation {\n    static Fade = 'fade';\n    static Slide = 'slide';\n    static Rotate = 'rotate';\n    static Zoom = 'zoom';\n}\n","import { Component, Input, Output, EventEmitter, HostListener,  ElementRef, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\n\nimport { NgxGalleryHelperService } from './ngx-gallery-helper.service';\nimport { NgxGalleryOrderedImage } from './ngx-gallery-ordered-image.model';\nimport { NgxGalleryAnimation } from './ngx-gallery-animation.model';\nimport { NgxGalleryAction } from './ngx-gallery-action.model';\n\n@Component({\n    selector: 'ngx-gallery-image',\n    template: `\n        <div class=\"ngx-gallery-image-wrapper ngx-gallery-animation-{{animation}} ngx-gallery-image-size-{{size}}\">\n            <div class=\"ngx-gallery-image\" *ngFor=\"let image of getImages(); let i = index;\" [ngClass]=\"{ 'ngx-gallery-active': selectedIndex == image.index, 'ngx-gallery-inactive-left': selectedIndex > image.index, 'ngx-gallery-inactive-right': selectedIndex < image.index, 'ngx-gallery-clickable': clickable }\" [style.background-image]=\"getSafeUrl(image.src)\" (click)=\"handleClick($event, image.index)\">\n                <div class=\"ngx-gallery-icons-wrapper\">\n                    <ngx-gallery-action *ngFor=\"let action of actions\" [icon]=\"action.icon\" [disabled]=\"action.disabled\" [titleText]=\"action.titleText\" (onClick)=\"action.onClick($event, image.index)\"></ngx-gallery-action>\n                </div>\n                <div class=\"ngx-gallery-image-text\" *ngIf=\"showDescription && descriptions[image.index]\" [innerHTML]=\"descriptions[image.index]\" (click)=\"$event.stopPropagation()\"></div>\n            </div>\n        </div>\n        <ngx-gallery-bullets *ngIf=\"bullets\" [count]=\"images.length\" [active]=\"selectedIndex\" (onChange)=\"show($event)\"></ngx-gallery-bullets>\n        <ngx-gallery-arrows class=\"ngx-gallery-image-size-{{size}}\" *ngIf=\"arrows\" (onPrevClick)=\"showPrev()\" (onNextClick)=\"showNext()\" [prevDisabled]=\"!canShowPrev()\" [nextDisabled]=\"!canShowNext()\" [arrowPrevIcon]=\"arrowPrevIcon\" [arrowNextIcon]=\"arrowNextIcon\"></ngx-gallery-arrows>\n    `,\n    styleUrls: ['./ngx-gallery-image.component.scss']\n})\nexport class NgxGalleryImageComponent implements OnInit, OnChanges {\n    @Input() images: NgxGalleryOrderedImage[];\n    @Input() clickable: boolean;\n    @Input() selectedIndex: number;\n    @Input() arrows: boolean;\n    @Input() arrowsAutoHide: boolean;\n    @Input() swipe: boolean;\n    @Input() animation: string;\n    @Input() size: string;\n    @Input() arrowPrevIcon: string;\n    @Input() arrowNextIcon: string;\n    @Input() autoPlay: boolean;\n    @Input() autoPlayInterval: number;\n    @Input() autoPlayPauseOnHover: boolean;\n    @Input() infinityMove: boolean;\n    @Input() lazyLoading: boolean;\n    @Input() actions: NgxGalleryAction[];\n    @Input() descriptions: string[];\n    @Input() showDescription: boolean;\n    @Input() bullets: boolean;\n\n    @Output() onClick = new EventEmitter();\n    @Output() onActiveChange = new EventEmitter();\n\n    canChangeImage = true;\n\n    private timer;\n\n    constructor(private sanitization: DomSanitizer,\n        private elementRef: ElementRef, private helperService: NgxGalleryHelperService) {}\n\n    ngOnInit(): void {\n        if (this.arrows && this.arrowsAutoHide) {\n            this.arrows = false;\n        }\n\n        if (this.autoPlay) {\n            this.startAutoPlay();\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes['swipe']) {\n            this.helperService.manageSwipe(this.swipe, this.elementRef, 'image', () => this.showNext(), () => this.showPrev());\n        }\n    }\n\n    @HostListener('mouseenter') onMouseEnter() {\n        if (this.arrowsAutoHide && !this.arrows) {\n            this.arrows = true;\n        }\n\n        if (this.autoPlay && this.autoPlayPauseOnHover) {\n            this.stopAutoPlay();\n        }\n    }\n\n    @HostListener('mouseleave') onMouseLeave() {\n        if (this.arrowsAutoHide && this.arrows) {\n            this.arrows = false;\n        }\n\n        if (this.autoPlay && this.autoPlayPauseOnHover) {\n            this.startAutoPlay();\n        }\n    }\n\n    reset(index: number): void {\n        this.selectedIndex = index;\n    }\n\n    getImages(): NgxGalleryOrderedImage[] {\n        if (!this.images) {\n            return [];\n        }\n\n        if (this.lazyLoading) {\n            let indexes = [this.selectedIndex];\n            let prevIndex = this.selectedIndex - 1;\n\n            if (prevIndex === -1 && this.infinityMove) {\n                indexes.push(this.images.length - 1)\n            } else if (prevIndex >= 0) {\n                indexes.push(prevIndex);\n            }\n\n            let nextIndex = this.selectedIndex + 1;\n\n            if (nextIndex == this.images.length && this.infinityMove) {\n                indexes.push(0);\n            } else if (nextIndex < this.images.length) {\n                indexes.push(nextIndex);\n            }\n\n            return this.images.filter((img, i) => indexes.indexOf(i) != -1);\n        } else {\n            return this.images;\n        }\n    }\n\n    startAutoPlay(): void {\n        this.stopAutoPlay();\n\n        this.timer = setInterval(() => {\n            if (!this.showNext()) {\n                this.selectedIndex = -1;\n                this.showNext();\n            }\n        }, this.autoPlayInterval);\n    }\n\n    stopAutoPlay() {\n        if (this.timer) {\n            clearInterval(this.timer);\n        }\n    }\n\n    handleClick(event: Event, index: number): void {\n        if (this.clickable) {\n            this.onClick.emit(index);\n\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    }\n\n    show(index: number) {\n        this.selectedIndex = index;\n        this.onActiveChange.emit(this.selectedIndex);\n        this.setChangeTimeout();\n    }\n\n    showNext(): boolean {\n        if (this.canShowNext() && this.canChangeImage) {\n            this.selectedIndex++;\n\n            if (this.selectedIndex === this.images.length) {\n                this.selectedIndex = 0;\n            }\n\n            this.onActiveChange.emit(this.selectedIndex);\n            this.setChangeTimeout();\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    showPrev(): void {\n        if (this.canShowPrev() && this.canChangeImage) {\n            this.selectedIndex--;\n\n            if (this.selectedIndex < 0) {\n                this.selectedIndex = this.images.length - 1;\n            }\n\n            this.onActiveChange.emit(this.selectedIndex);\n            this.setChangeTimeout();\n        }\n    }\n\n    setChangeTimeout() {\n        this.canChangeImage = false;\n        let timeout = 1000;\n\n        if (this.animation === NgxGalleryAnimation.Slide\n            || this.animation === NgxGalleryAnimation.Fade) {\n                timeout = 500;\n        }\n\n        setTimeout(() => {\n            this.canChangeImage = true;\n        }, timeout);\n    }\n\n    canShowNext(): boolean {\n        if (this.images) {\n            return this.infinityMove || this.selectedIndex < this.images.length - 1\n                ? true : false;\n        } else {\n            return false;\n        }\n    }\n\n    canShowPrev(): boolean {\n        if (this.images) {\n            return this.infinityMove || this.selectedIndex > 0 ? true : false;\n        } else {\n            return false;\n        }\n    }\n\n    getSafeUrl(image: string): SafeStyle {\n        return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\n    }\n}\n","export class NgxGalleryOrder {\n    static Column = 1;\n    static Row = 2;\n    static Page = 3;\n}\n","import { Component, Input, Output, EventEmitter, HostListener, OnChanges, SimpleChanges, ElementRef } from '@angular/core';\nimport { DomSanitizer, SafeStyle, SafeResourceUrl } from '@angular/platform-browser';\n\nimport { NgxGalleryHelperService } from './ngx-gallery-helper.service';\nimport { NgxGalleryOrder } from './ngx-gallery-order.model';\nimport { NgxGalleryAction } from './ngx-gallery-action.model';\n\n@Component({\n    selector: 'ngx-gallery-thumbnails',\n    template: `\n    <div class=\"ngx-gallery-thumbnails-wrapper ngx-gallery-thumbnail-size-{{size}}\">\n        <div class=\"ngx-gallery-thumbnails\" [style.transform]=\"'translateX(' + thumbnailsLeft + ')'\" [style.marginLeft]=\"thumbnailsMarginLeft\">\n            <a [href]=\"hasLink(i) ? links[i] : '#'\" [target]=\"linkTarget\" class=\"ngx-gallery-thumbnail\" *ngFor=\"let image of getImages(); let i = index;\" [style.background-image]=\"getSafeUrl(image)\" (click)=\"handleClick($event, i)\" [style.width]=\"getThumbnailWidth()\" [style.height]=\"getThumbnailHeight()\" [style.left]=\"getThumbnailLeft(i)\" [style.top]=\"getThumbnailTop(i)\" [ngClass]=\"{ 'ngx-gallery-active': i == selectedIndex, 'ngx-gallery-clickable': clickable }\" [attr.aria-label]=\"labels[i]\">\n                <div class=\"ngx-gallery-icons-wrapper\">\n                    <ngx-gallery-action *ngFor=\"let action of actions\" [icon]=\"action.icon\" [disabled]=\"action.disabled\" [titleText]=\"action.titleText\" (onClick)=\"action.onClick($event, i)\"></ngx-gallery-action>\n                </div>\n                <div class=\"ngx-gallery-remaining-count-overlay\" *ngIf=\"remainingCount && remainingCountValue && (i == (rows * columns) - 1)\">\n                    <span class=\"ngx-gallery-remaining-count\">+{{remainingCountValue}}</span>\n                </div>\n            </a>\n        </div>\n    </div>\n    <ngx-gallery-arrows *ngIf=\"canShowArrows()\" (onPrevClick)=\"moveLeft()\" (onNextClick)=\"moveRight()\" [prevDisabled]=\"!canMoveLeft()\" [nextDisabled]=\"!canMoveRight()\" [arrowPrevIcon]=\"arrowPrevIcon\" [arrowNextIcon]=\"arrowNextIcon\"></ngx-gallery-arrows>\n    `,\n    styleUrls: ['./ngx-gallery-thumbnails.component.scss']\n})\nexport class NgxGalleryThumbnailsComponent implements OnChanges {\n\n    thumbnailsLeft: string;\n    thumbnailsMarginLeft: string;\n    mouseenter: boolean;\n    remainingCountValue: number;\n\n    minStopIndex = 0;\n\n    @Input() images: string[] | SafeResourceUrl[];\n    @Input() links: string[];\n    @Input() labels: string[];\n    @Input() linkTarget: string;\n    @Input() columns: number;\n    @Input() rows: number;\n    @Input() arrows: boolean;\n    @Input() arrowsAutoHide: boolean;\n    @Input() margin: number;\n    @Input() selectedIndex: number;\n    @Input() clickable: boolean;\n    @Input() swipe: boolean;\n    @Input() size: string;\n    @Input() arrowPrevIcon: string;\n    @Input() arrowNextIcon: string;\n    @Input() moveSize: number;\n    @Input() order: number;\n    @Input() remainingCount: boolean;\n    @Input() lazyLoading: boolean;\n    @Input() actions: NgxGalleryAction[];\n\n    @Output() onActiveChange = new EventEmitter();\n\n    private index = 0;\n\n    constructor(private sanitization: DomSanitizer, private elementRef: ElementRef,\n        private helperService: NgxGalleryHelperService) {}\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes['selectedIndex']) {\n            this.validateIndex();\n        }\n\n        if (changes['swipe']) {\n            this.helperService.manageSwipe(this.swipe, this.elementRef,\n            'thumbnails', () => this.moveRight(), () => this.moveLeft());\n        }\n\n        if (this.images) {\n            this.remainingCountValue = this.images.length - (this.rows * this.columns);\n        }\n    }\n\n    @HostListener('mouseenter') onMouseEnter() {\n        this.mouseenter = true;\n    }\n\n    @HostListener('mouseleave') onMouseLeave() {\n        this.mouseenter = false;\n    }\n\n    reset(index: number): void {\n        this.selectedIndex = index;\n        this.setDefaultPosition();\n\n        this.index = 0;\n        this.validateIndex();\n    }\n\n    getImages(): string[] | SafeResourceUrl[] {\n        if (!this.images) {\n            return [];\n        }\n\n        if (this.remainingCount) {\n            return this.images.slice(0, this.rows * this.columns);\n        } \n        else if (this.lazyLoading && this.order != NgxGalleryOrder.Row) {\n            let stopIndex = 0;\n\n            if (this.order === NgxGalleryOrder.Column) {\n                stopIndex = (this.index + this.columns + this.moveSize) * this.rows;\n            }\n            else if (this.order === NgxGalleryOrder.Page) {\n                stopIndex = this.index + ((this.columns * this.rows) * 2);\n            }\n\n            if (stopIndex <= this.minStopIndex) {\n                stopIndex = this.minStopIndex;\n            } else {\n                this.minStopIndex = stopIndex;\n            }\n\n            return this.images.slice(0, stopIndex);\n        } \n        else {\n            return this.images;\n        }\n    }\n\n    handleClick(event: Event, index: number): void {\n        if (!this.hasLink(index)) {\n            this.selectedIndex = index;\n            this.onActiveChange.emit(index);\n\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    }\n\n    hasLink(index: number): boolean {\n        if (this.links && this.links.length && this.links[index]) return true;\n    }\n\n    moveRight(): void {\n        if (this.canMoveRight()) {\n            this.index += this.moveSize;\n            let maxIndex = this.getMaxIndex() - this.columns;\n\n            if (this.index > maxIndex) {\n                this.index = maxIndex;\n            }\n\n            this.setThumbnailsPosition();\n        }\n    }\n\n    moveLeft(): void {\n        if (this.canMoveLeft()) {\n            this.index -= this.moveSize;\n\n            if (this.index < 0) {\n                this.index = 0;\n            }\n\n            this.setThumbnailsPosition();\n        }\n    }\n\n    canMoveRight(): boolean {\n        return this.index + this.columns < this.getMaxIndex() ? true : false;\n    }\n\n    canMoveLeft(): boolean {\n        return this.index !== 0 ? true : false;\n    }\n\n    getThumbnailLeft(index: number): SafeStyle {\n        let calculatedIndex;\n\n        if (this.order === NgxGalleryOrder.Column) {\n            calculatedIndex = Math.floor(index / this.rows);\n        }\n        else if (this.order === NgxGalleryOrder.Page) {\n            calculatedIndex = (index % this.columns) + (Math.floor(index / (this.rows * this.columns)) * this.columns);\n        }\n        else if (this.order == NgxGalleryOrder.Row && this.remainingCount) {\n            calculatedIndex = index % this.columns;\n        }\n        else {\n            calculatedIndex = index % Math.ceil(this.images.length / this.rows);\n        }\n\n        return this.getThumbnailPosition(calculatedIndex, this.columns);\n    }\n\n    getThumbnailTop(index: number): SafeStyle {\n        let calculatedIndex;\n\n        if (this.order === NgxGalleryOrder.Column) {\n            calculatedIndex = index % this.rows;\n        }\n        else if (this.order === NgxGalleryOrder.Page) {\n            calculatedIndex = Math.floor(index / this.columns) - (Math.floor(index / (this.rows * this.columns)) * this.rows);\n        }\n        else if (this.order == NgxGalleryOrder.Row && this.remainingCount) {\n            calculatedIndex = Math.floor(index / this.columns);\n        }\n        else {\n            calculatedIndex = Math.floor(index / Math.ceil(this.images.length / this.rows));\n        }\n\n        return this.getThumbnailPosition(calculatedIndex, this.rows);\n    }\n\n    getThumbnailWidth(): SafeStyle {\n        return this.getThumbnailDimension(this.columns);\n    }\n\n    getThumbnailHeight(): SafeStyle {\n        return this.getThumbnailDimension(this.rows);\n    }\n\n    setThumbnailsPosition(): void {\n        this.thumbnailsLeft = - ((100 / this.columns) * this.index) + '%'\n\n        this.thumbnailsMarginLeft = - ((this.margin - (((this.columns - 1)\n        * this.margin) / this.columns)) * this.index) + 'px';\n    }\n\n    setDefaultPosition(): void {\n        this.thumbnailsLeft = '0px';\n        this.thumbnailsMarginLeft = '0px';\n    }\n\n    canShowArrows(): boolean {\n        if (this.remainingCount) {\n            return false;\n        } else if (this.arrows && this.images && this.images.length > this.getVisibleCount()\n            && (!this.arrowsAutoHide || this.mouseenter)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    validateIndex(): void {\n        if (this.images) {\n            let newIndex;\n\n            if (this.order === NgxGalleryOrder.Column) {\n                newIndex = Math.floor(this.selectedIndex / this.rows);\n            } else {\n                newIndex = this.selectedIndex % Math.ceil(this.images.length / this.rows);\n            }\n\n            if (this.remainingCount) {\n                newIndex = 0;\n            }\n\n            if (newIndex < this.index || newIndex >= this.index + this.columns) {\n                const maxIndex = this.getMaxIndex() - this.columns;\n                this.index = newIndex > maxIndex ? maxIndex : newIndex;\n\n                this.setThumbnailsPosition();\n            }\n        }\n    }\n\n    getSafeUrl(image: string): SafeStyle {\n        return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\n    }\n\n    private getThumbnailPosition(index: number, count: number): SafeStyle {\n        return this.getSafeStyle('calc(' + ((100 / count) * index) + '% + '\n            + ((this.margin - (((count - 1) * this.margin) / count)) * index) + 'px)');\n    }\n\n    private getThumbnailDimension(count: number): SafeStyle {\n        if (this.margin !== 0) {\n            return this.getSafeStyle('calc(' + (100 / count) + '% - '\n                + (((count - 1) * this.margin) / count) + 'px)');\n        } else {\n            return this.getSafeStyle('calc(' + (100 / count) + '% + 1px)');\n        }\n    }\n\n    private getMaxIndex(): number {\n        if (this.order == NgxGalleryOrder.Page) {\n            let maxIndex = (Math.floor(this.images.length / this.getVisibleCount()) * this.columns);\n\n            if (this.images.length % this.getVisibleCount() > this.columns) {\n                maxIndex += this.columns;\n            }\n            else {\n                maxIndex += this.images.length % this.getVisibleCount();\n            }\n\n            return maxIndex;\n        }\n        else {\n            return Math.ceil(this.images.length / this.rows);\n        }\n    }\n\n    private getVisibleCount(): number {\n        return this.columns * this.rows;\n    }\n\n    private getSafeStyle(value: string): SafeStyle {\n        return this.sanitization.bypassSecurityTrustStyle(value);\n    }\n}\n","import { ChangeDetectorRef, Component, Input, Output, EventEmitter, OnInit, OnChanges, SimpleChanges, ElementRef, HostListener, ViewChild, Renderer2 } from '@angular/core';\nimport { SafeResourceUrl, DomSanitizer, SafeUrl, SafeStyle } from '@angular/platform-browser';\n\nimport { NgxGalleryAction } from './ngx-gallery-action.model';\nimport { NgxGalleryHelperService } from './ngx-gallery-helper.service';\n\n@Component({\n    selector: 'ngx-gallery-preview',\n    template: `\n        <ngx-gallery-arrows *ngIf=\"arrows\" (onPrevClick)=\"showPrev()\" (onNextClick)=\"showNext()\" [prevDisabled]=\"!canShowPrev()\" [nextDisabled]=\"!canShowNext()\" [arrowPrevIcon]=\"arrowPrevIcon\" [arrowNextIcon]=\"arrowNextIcon\"></ngx-gallery-arrows>\n        <div class=\"ngx-gallery-preview-top\">\n            <div class=\"ngx-gallery-preview-icons\">\n                <ngx-gallery-action *ngFor=\"let action of actions\" [icon]=\"action.icon\" [disabled]=\"action.disabled\" [titleText]=\"action.titleText\" (onClick)=\"action.onClick($event, index)\"></ngx-gallery-action>\n                <a *ngIf=\"download && src\" [href]=\"src\" class=\"ngx-gallery-icon\" aria-hidden=\"true\" download>\n                    <i class=\"ngx-gallery-icon-content {{ downloadIcon }}\"></i>\n                </a>\n                <ngx-gallery-action *ngIf=\"zoom\" [icon]=\"zoomOutIcon\" [disabled]=\"!canZoomOut()\" (onClick)=\"zoomOut()\"></ngx-gallery-action>\n                <ngx-gallery-action *ngIf=\"zoom\" [icon]=\"zoomInIcon\" [disabled]=\"!canZoomIn()\" (onClick)=\"zoomIn()\"></ngx-gallery-action>\n                <ngx-gallery-action *ngIf=\"rotate\" [icon]=\"rotateLeftIcon\" (onClick)=\"rotateLeft()\"></ngx-gallery-action>\n                <ngx-gallery-action *ngIf=\"rotate\" [icon]=\"rotateRightIcon\" (onClick)=\"rotateRight()\"></ngx-gallery-action>\n                <ngx-gallery-action *ngIf=\"fullscreen\" [icon]=\"'ngx-gallery-fullscreen ' + fullscreenIcon\" (onClick)=\"manageFullscreen()\"></ngx-gallery-action>\n                <ngx-gallery-action [icon]=\"'ngx-gallery-close ' + closeIcon\" (onClick)=\"close()\"></ngx-gallery-action>\n            </div>\n        </div>\n        <div class=\"ngx-spinner-wrapper ngx-gallery-center\" [class.ngx-gallery-active]=\"showSpinner\">\n            <i class=\"ngx-gallery-icon ngx-gallery-spinner {{spinnerIcon}}\" aria-hidden=\"true\"></i>\n        </div>\n        <div class=\"ngx-gallery-preview-wrapper\" (click)=\"closeOnClick && close()\" (mouseup)=\"mouseUpHandler($event)\" (mousemove)=\"mouseMoveHandler($event)\" (touchend)=\"mouseUpHandler($event)\" (touchmove)=\"mouseMoveHandler($event)\">\n            <div class=\"ngx-gallery-preview-img-wrapper\">\n                <img *ngIf=\"src\" #previewImage class=\"ngx-gallery-preview-img ngx-gallery-center\" [src]=\"src\" (click)=\"$event.stopPropagation()\" (mouseenter)=\"imageMouseEnter()\" (mouseleave)=\"imageMouseLeave()\" (mousedown)=\"mouseDownHandler($event)\" (touchstart)=\"mouseDownHandler($event)\" [class.ngx-gallery-active]=\"!loading\" [class.animation]=\"animation\" [class.ngx-gallery-grab]=\"canDragOnZoom()\" [style.transform]=\"getTransform()\" [style.left]=\"positionLeft + 'px'\" [style.top]=\"positionTop + 'px'\"/>\n                <ngx-gallery-bullets *ngIf=\"bullets\" [count]=\"images.length\" [active]=\"index\" (onChange)=\"showAtIndex($event)\"></ngx-gallery-bullets>\n            </div>\n            <div class=\"ngx-gallery-preview-text\" *ngIf=\"showDescription && description\" [innerHTML]=\"description\" (click)=\"$event.stopPropagation()\"></div>\n        </div>\n    `,\n    styleUrls: ['./ngx-gallery-preview.component.scss']\n})\nexport class NgxGalleryPreviewComponent implements OnInit, OnChanges {\n\n    src: SafeUrl;\n    srcIndex: number;\n    description: string;\n    showSpinner = false;\n    positionLeft = 0;\n    positionTop = 0;\n    zoomValue = 1;\n    loading = false;\n    rotateValue = 0;\n    index = 0;\n\n    @Input() images: string[] | SafeResourceUrl[];\n    @Input() descriptions: string[];\n    @Input() showDescription: boolean;\n    @Input() arrows: boolean;\n    @Input() arrowsAutoHide: boolean;\n    @Input() swipe: boolean;\n    @Input() fullscreen: boolean;\n    @Input() forceFullscreen: boolean;\n    @Input() closeOnClick: boolean;\n    @Input() closeOnEsc: boolean;\n    @Input() keyboardNavigation: boolean;\n    @Input() arrowPrevIcon: string;\n    @Input() arrowNextIcon: string;\n    @Input() closeIcon: string;\n    @Input() fullscreenIcon: string;\n    @Input() spinnerIcon: string;\n    @Input() autoPlay: boolean;\n    @Input() autoPlayInterval: number;\n    @Input() autoPlayPauseOnHover: boolean;\n    @Input() infinityMove: boolean;\n    @Input() zoom: boolean;\n    @Input() zoomStep: number;\n    @Input() zoomMax: number;\n    @Input() zoomMin: number;\n    @Input() zoomInIcon: string;\n    @Input() zoomOutIcon: string;\n    @Input() animation: boolean;\n    @Input() actions: NgxGalleryAction[];\n    @Input() rotate: boolean;\n    @Input() rotateLeftIcon: string;\n    @Input() rotateRightIcon: string;\n    @Input() download: boolean;\n    @Input() downloadIcon: string;\n    @Input() bullets: string;\n\n    @Output() onOpen = new EventEmitter();\n    @Output() onClose = new EventEmitter();\n    @Output() onActiveChange = new EventEmitter<number>();\n\n    @ViewChild('previewImage') previewImage: ElementRef;\n\n    private isOpen = false;\n    private timer;\n    private initialX = 0;\n    private initialY = 0;\n    private initialLeft = 0;\n    private initialTop = 0;\n    private isMove = false;\n\n    private keyDownListener: Function;\n\n    constructor(private sanitization: DomSanitizer, private elementRef: ElementRef,\n                private helperService: NgxGalleryHelperService, private renderer: Renderer2,\n                private changeDetectorRef: ChangeDetectorRef) {}\n\n    ngOnInit(): void {\n        if (this.arrows && this.arrowsAutoHide) {\n            this.arrows = false;\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes['swipe']) {\n            this.helperService.manageSwipe(this.swipe, this.elementRef,\n                'preview', () => this.showNext(), () => this.showPrev());\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.keyDownListener) {\n            this.keyDownListener();\n        }\n    }\n\n    @HostListener('mouseenter') onMouseEnter() {\n        if (this.arrowsAutoHide && !this.arrows) {\n            this.arrows = true;\n        }\n    }\n\n    @HostListener('mouseleave') onMouseLeave() {\n        if (this.arrowsAutoHide && this.arrows) {\n            this.arrows = false;\n        }\n    }\n\n    onKeyDown(e) {\n        if (this.isOpen) {\n            if (this.keyboardNavigation) {\n                if (this.isKeyboardPrev(e)) {\n                    this.showPrev();\n                } else if (this.isKeyboardNext(e)) {\n                    this.showNext();\n                }\n            }\n            if (this.closeOnEsc && this.isKeyboardEsc(e)) {\n                this.close();\n            }\n        }\n    }\n\n    open(index: number): void {\n        this.onOpen.emit();\n\n        this.index = index;\n        this.isOpen = true;\n        this.show(true);\n\n        if (this.forceFullscreen) {\n            this.manageFullscreen();\n        }\n\n        this.keyDownListener = this.renderer.listen(\"window\", \"keydown\", (e) => this.onKeyDown(e));\n    }\n\n    close(): void {\n        this.isOpen = false;\n        this.closeFullscreen();\n        this.onClose.emit();\n\n        this.stopAutoPlay();\n\n        if (this.keyDownListener) {\n            this.keyDownListener();\n        }\n    }\n\n    imageMouseEnter(): void {\n        if (this.autoPlay && this.autoPlayPauseOnHover) {\n            this.stopAutoPlay();\n        }\n    }\n\n    imageMouseLeave(): void {\n        if (this.autoPlay && this.autoPlayPauseOnHover) {\n            this.startAutoPlay();\n        }\n    }\n\n    startAutoPlay(): void {\n        if (this.autoPlay) {\n            this.stopAutoPlay();\n\n            this.timer = setTimeout(() => {\n                if (!this.showNext()) {\n                    this.index = -1;\n                    this.showNext();\n                }\n            }, this.autoPlayInterval);\n        }\n    }\n\n    stopAutoPlay(): void {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n    }\n\n    showAtIndex(index: number): void {\n        this.index = index;\n        this.show();\n    }\n\n    showNext(): boolean {\n        if (this.canShowNext()) {\n            this.index++;\n\n            if (this.index === this.images.length) {\n                this.index = 0;\n            }\n\n            this.show();\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    showPrev(): void {\n        if (this.canShowPrev()) {\n            this.index--;\n\n            if (this.index < 0) {\n                this.index = this.images.length - 1;\n            }\n\n            this.show();\n        }\n    }\n\n    canShowNext(): boolean {\n        if (this.loading) {\n            return false;\n        } else if (this.images) {\n            return this.infinityMove || this.index < this.images.length - 1 ? true : false;\n        } else {\n            return false;\n        }\n    }\n\n    canShowPrev(): boolean {\n        if (this.loading) {\n            return false;\n        } else if (this.images) {\n            return this.infinityMove || this.index > 0 ? true : false;\n        } else {\n            return false;\n        }\n    }\n\n    manageFullscreen(): void {\n        if (this.fullscreen || this.forceFullscreen) {\n            const doc = <any>document;\n\n            if (!doc.fullscreenElement && !doc.mozFullScreenElement\n                && !doc.webkitFullscreenElement && !doc.msFullscreenElement) {\n                this.openFullscreen();\n            } else {\n                this.closeFullscreen();\n            }\n        }\n    }\n\n    getSafeUrl(image: string): SafeUrl {\n        return image.substr(0, 10) === 'data:image' ?\n            image : this.sanitization.bypassSecurityTrustUrl(image);\n    }\n\n    zoomIn(): void {\n        if (this.canZoomIn()) {\n            this.zoomValue += this.zoomStep;\n\n            if (this.zoomValue > this.zoomMax) {\n                this.zoomValue = this.zoomMax;\n            }\n        }\n    }\n\n    zoomOut(): void {\n        if (this.canZoomOut()) {\n            this.zoomValue -= this.zoomStep;\n\n            if (this.zoomValue < this.zoomMin) {\n                this.zoomValue = this.zoomMin;\n            }\n\n            if (this.zoomValue <= 1) {\n                this.resetPosition()\n            }\n        }\n    }\n\n    rotateLeft(): void {\n        this.rotateValue -= 90;\n    }\n\n    rotateRight(): void {\n        this.rotateValue += 90;\n    }\n\n    getTransform(): SafeStyle {\n        return this.sanitization.bypassSecurityTrustStyle('scale(' + this.zoomValue + ') rotate(' + this.rotateValue + 'deg)');\n    }\n\n    canZoomIn(): boolean {\n        return this.zoomValue < this.zoomMax ? true : false;\n    }\n\n    canZoomOut(): boolean {\n        return this.zoomValue > this.zoomMin ? true : false;\n    }\n\n    canDragOnZoom() {\n        return this.zoom && this.zoomValue > 1;\n    }\n\n    mouseDownHandler(e): void {\n        if (this.canDragOnZoom()) {\n            this.initialX = this.getClientX(e);\n            this.initialY = this.getClientY(e);\n            this.initialLeft = this.positionLeft;\n            this.initialTop = this.positionTop;\n            this.isMove = true;\n\n            e.preventDefault();\n        }\n    }\n\n    mouseUpHandler(e): void {\n        this.isMove = false;\n    }\n\n    mouseMoveHandler(e) {\n        if (this.isMove) {\n            this.positionLeft = this.initialLeft + (this.getClientX(e) - this.initialX);\n            this.positionTop = this.initialTop + (this.getClientY(e) - this.initialY);\n        }\n    }\n\n    private getClientX(e): number {\n        return e.touches && e.touches.length ? e.touches[0].clientX : e.clientX;\n    }\n\n    private getClientY(e): number {\n        return e.touches && e.touches.length ? e.touches[0].clientY : e.clientY;\n    }\n\n    private resetPosition() {\n        if (this.zoom) {\n            this.positionLeft = 0;\n            this.positionTop = 0;\n        }\n    }\n\n    private isKeyboardNext(e): boolean {\n        return e.keyCode === 39 ? true : false;\n    }\n\n    private isKeyboardPrev(e): boolean {\n        return e.keyCode === 37 ? true : false;\n    }\n\n    private isKeyboardEsc(e): boolean {\n        return e.keyCode === 27 ? true : false;\n    }\n\n    private openFullscreen(): void {\n        const element = <any>document.documentElement;\n\n        if (element.requestFullscreen) {\n            element.requestFullscreen();\n        } else if (element.msRequestFullscreen) {\n            element.msRequestFullscreen();\n        } else if (element.mozRequestFullScreen) {\n            element.mozRequestFullScreen();\n        } else if (element.webkitRequestFullscreen) {\n            element.webkitRequestFullscreen();\n        }\n    }\n\n    private closeFullscreen(): void {\n        if (this.isFullscreen()) {\n            const doc = <any>document;\n\n            if (doc.exitFullscreen) {\n                doc.exitFullscreen();\n            } else if (doc.msExitFullscreen) {\n                doc.msExitFullscreen();\n            } else if (doc.mozCancelFullScreen) {\n                doc.mozCancelFullScreen();\n            } else if (doc.webkitExitFullscreen) {\n                doc.webkitExitFullscreen();\n            }\n        }\n    }\n\n    private isFullscreen() {\n        const doc = <any>document;\n\n        return doc.fullscreenElement || doc.webkitFullscreenElement\n            || doc.mozFullScreenElement || doc.msFullscreenElement;\n    }\n\n\n\n    private show(first = false) {\n        this.loading = true;\n        this.stopAutoPlay();\n\n        this.onActiveChange.emit(this.index);\n\n        if (first || !this.animation) {\n            this._show();\n        } else {\n            setTimeout(() => this._show(), 600);\n        }\n    }\n\n    private _show() {\n        this.zoomValue = 1;\n        this.rotateValue = 0;\n        this.resetPosition();\n\n        this.src = this.getSafeUrl(<string>this.images[this.index]);\n        this.srcIndex = this.index;\n        this.description = this.descriptions[this.index];\n        this.changeDetectorRef.markForCheck();\n\n        setTimeout(() => {\n            if (this.isLoaded(this.previewImage.nativeElement)) {\n                this.loading = false;\n                this.startAutoPlay();\n                this.changeDetectorRef.markForCheck();\n            } else {\n                setTimeout(() => {\n                    if (this.loading) {\n                        this.showSpinner = true;\n                        this.changeDetectorRef.markForCheck();\n                    }\n                })\n\n                this.previewImage.nativeElement.onload = () => {\n                    this.loading = false;\n                    this.showSpinner = false;\n                    this.previewImage.nativeElement.onload = null;\n                    this.startAutoPlay();\n                    this.changeDetectorRef.markForCheck();\n                }\n            }\n        })\n    }\n\n    private isLoaded(img): boolean {\n        if (!img.complete) {\n            return false;\n        }\n\n        if (typeof img.naturalWidth !== 'undefined' && img.naturalWidth === 0) {\n            return false;\n        }\n\n        return true;\n    }\n}\n","export class NgxGalleryImageSize {\n    static Cover = 'cover';\n    static Contain = 'contain';\n}\n","export class NgxGalleryLayout {\n    static ThumbnailsTop = 'thumbnails-top';\n    static ThumbnailsBottom = 'thumbnails-bottom';\n}\n","export interface INgxGalleryAction {\n    icon: string;\n    disabled?: boolean;\n    titleText?: string;\n\n    onClick: (event: Event, index: number) => void;\n}\n\nexport class NgxGalleryAction implements INgxGalleryAction {\n    icon: string;\n    disabled?: boolean;\n    titleText?: string;\n\n    onClick: (event: Event, index: number) => void;\n\n    constructor(action: INgxGalleryAction) {\n        this.icon = action.icon;\n        this.disabled = action.disabled ? action.disabled : false;\n        this.titleText = action.titleText ? action.titleText : '';\n\n        this.onClick = action.onClick;\n    }\n}\n","import { NgxGalleryAnimation } from './ngx-gallery-animation.model';\nimport { NgxGalleryImageSize } from './ngx-gallery-image-size.model';\nimport { NgxGalleryLayout } from './ngx-gallery-layout.model';\nimport { NgxGalleryOrder } from './ngx-gallery-order.model';\nimport { NgxGalleryAction } from './ngx-gallery-action.model';\n\nexport interface INgxGalleryOptions {\n    width?: string;\n    height?: string;\n    breakpoint?: number;\n    fullWidth?: boolean;\n    layout?: string;\n    startIndex?: number;\n    linkTarget?: string;\n    lazyLoading?: boolean;\n    image?: boolean;\n    imagePercent?: number;\n    imageArrows?: boolean;\n    imageArrowsAutoHide?: boolean;\n    imageSwipe?: boolean;\n    imageAnimation?: string;\n    imageSize?: string;\n    imageAutoPlay?: boolean;\n    imageAutoPlayInterval?: number;\n    imageAutoPlayPauseOnHover?: boolean;\n    imageInfinityMove?: boolean;\n    imageActions?: NgxGalleryAction[];\n    imageDescription?: boolean;\n    imageBullets?: boolean;\n    thumbnails?: boolean;\n    thumbnailsColumns?: number;\n    thumbnailsRows?: number;\n    thumbnailsPercent?: number;\n    thumbnailsMargin?: number;\n    thumbnailsArrows?: boolean;\n    thumbnailsArrowsAutoHide?: boolean;\n    thumbnailsSwipe?: boolean;\n    thumbnailsMoveSize?: number;\n    thumbnailsOrder?: NgxGalleryOrder;\n    thumbnailsRemainingCount?: boolean;\n    thumbnailsAsLinks?: boolean;\n    thumbnailsAutoHide?: boolean;\n    thumbnailMargin?: number;\n    thumbnailSize?: string;\n    thumbnailActions?: NgxGalleryAction[];\n    preview?: boolean;\n    previewDescription?: boolean;\n    previewArrows?: boolean;\n    previewArrowsAutoHide?: boolean;\n    previewSwipe?: boolean;\n    previewFullscreen?: boolean;\n    previewForceFullscreen?: boolean;\n    previewCloseOnClick?: boolean;\n    previewCloseOnEsc?: boolean;\n    previewKeyboardNavigation?: boolean;\n    previewAnimation?: boolean;\n    previewAutoPlay?: boolean;\n    previewAutoPlayInterval?: number;\n    previewAutoPlayPauseOnHover?: boolean;\n    previewInfinityMove?: boolean;\n    previewZoom?: boolean;\n    previewZoomStep?: number;\n    previewZoomMax?: number;\n    previewZoomMin?: number;\n    previewRotate?: boolean;\n    previewDownload?: boolean;\n    previewCustom?: (index: number) => void;\n    previewBullets?: boolean;\n    arrowPrevIcon?: string;\n    arrowNextIcon?: string;\n    closeIcon?: string;\n    fullscreenIcon?: string;\n    spinnerIcon?: string;\n    zoomInIcon?: string;\n    zoomOutIcon?: string;\n    rotateLeftIcon?: string;\n    rotateRightIcon?: string;\n    downloadIcon?: string;\n    actions?: NgxGalleryAction[];\n}\n\nexport class NgxGalleryOptions implements INgxGalleryOptions {\n    width?: string;\n    height?: string;\n    breakpoint?: number;\n    fullWidth?: boolean;\n    layout?: string;\n    startIndex?: number;\n    linkTarget?: string;\n    lazyLoading?: boolean;\n    image?: boolean;\n    imagePercent?: number;\n    imageArrows?: boolean;\n    imageArrowsAutoHide?: boolean;\n    imageSwipe?: boolean;\n    imageAnimation?: string;\n    imageSize?: string;\n    imageAutoPlay?: boolean;\n    imageAutoPlayInterval?: number;\n    imageAutoPlayPauseOnHover?: boolean;\n    imageInfinityMove?: boolean;\n    imageActions?: NgxGalleryAction[];\n    imageDescription?: boolean;\n    imageBullets?: boolean;\n    thumbnails?: boolean;\n    thumbnailsColumns?: number;\n    thumbnailsRows?: number;\n    thumbnailsPercent?: number;\n    thumbnailsMargin?: number;\n    thumbnailsArrows?: boolean;\n    thumbnailsArrowsAutoHide?: boolean;\n    thumbnailsSwipe?: boolean;\n    thumbnailsMoveSize?: number;\n    thumbnailsOrder?: NgxGalleryOrder;\n    thumbnailsRemainingCount?: boolean;\n    thumbnailsAsLinks?: boolean;\n    thumbnailsAutoHide?: boolean;\n    thumbnailMargin?: number;\n    thumbnailSize?: string;\n    thumbnailActions?: NgxGalleryAction[];\n    preview?: boolean;\n    previewDescription?: boolean;\n    previewArrows?: boolean;\n    previewArrowsAutoHide?: boolean;\n    previewSwipe?: boolean;\n    previewFullscreen?: boolean;\n    previewForceFullscreen?: boolean;\n    previewCloseOnClick?: boolean;\n    previewCloseOnEsc?: boolean;\n    previewKeyboardNavigation?: boolean;\n    previewAnimation?: boolean;\n    previewAutoPlay?: boolean;\n    previewAutoPlayInterval?: number;\n    previewAutoPlayPauseOnHover?: boolean;\n    previewInfinityMove?: boolean;\n    previewZoom?: boolean;\n    previewZoomStep?: number;\n    previewZoomMax?: number;\n    previewZoomMin?: number;\n    previewRotate?: boolean;\n    previewDownload?: boolean;\n    previewCustom?: (index: number) => void;\n    previewBullets?: boolean;\n    arrowPrevIcon?: string;\n    arrowNextIcon?: string;\n    closeIcon?: string;\n    fullscreenIcon?: string;\n    spinnerIcon?: string;\n    zoomInIcon?: string;\n    zoomOutIcon?: string;\n    rotateLeftIcon?: string;\n    rotateRightIcon?: string;\n    downloadIcon?: string;\n    actions?: NgxGalleryAction[];\n\n    constructor(obj: INgxGalleryOptions) {\n\n        const preventDefaults = obj.breakpoint === undefined ? false : true;\n\n        function use<T>(source: T, defaultValue: T): T {\n            return obj && (source !== undefined || preventDefaults) ? source : defaultValue;\n        }\n\n        this.breakpoint = use(obj.breakpoint, undefined);\n        this.width = use(obj.width, '500px');\n        this.height = use(obj.height, '400px');\n        this.fullWidth = use(obj.fullWidth, false);\n        this.layout = use(obj.layout, NgxGalleryLayout.ThumbnailsBottom);\n        this.startIndex = use(obj.startIndex, 0);\n        this.linkTarget = use(obj.linkTarget, '_blank');\n        this.lazyLoading = use(obj.lazyLoading, true);\n\n        this.image = use(obj.image, true);\n        this.imagePercent = use(obj.imagePercent, 75);\n        this.imageArrows = use(obj.imageArrows, true);\n        this.imageArrowsAutoHide = use(obj.imageArrowsAutoHide, false);\n        this.imageSwipe = use(obj.imageSwipe, false);\n        this.imageAnimation = use(obj.imageAnimation, NgxGalleryAnimation.Fade);\n        this.imageSize = use(obj.imageSize, NgxGalleryImageSize.Cover);\n        this.imageAutoPlay = use(obj.imageAutoPlay, false);\n        this.imageAutoPlayInterval = use(obj.imageAutoPlayInterval, 2000);\n        this.imageAutoPlayPauseOnHover = use(obj.imageAutoPlayPauseOnHover, false);\n        this.imageInfinityMove = use(obj.imageInfinityMove, false);\n        if (obj && obj.imageActions && obj.imageActions.length) {\n            obj.imageActions = obj.imageActions.map(action => new NgxGalleryAction(action));\n        }\n        this.imageActions = use(obj.imageActions, []);\n        this.imageDescription = use(obj.imageDescription, false);\n        this.imageBullets = use(obj.imageBullets, false);\n\n        this.thumbnails = use(obj.thumbnails, true);\n        this.thumbnailsColumns = use(obj.thumbnailsColumns, 4);\n        this.thumbnailsRows = use(obj.thumbnailsRows, 1);\n        this.thumbnailsPercent = use(obj.thumbnailsPercent, 25);\n        this.thumbnailsMargin = use(obj.thumbnailsMargin, 10);\n        this.thumbnailsArrows = use(obj.thumbnailsArrows, true);\n        this.thumbnailsArrowsAutoHide = use(obj.thumbnailsArrowsAutoHide, false);\n        this.thumbnailsSwipe = use(obj.thumbnailsSwipe, false);\n        this.thumbnailsMoveSize = use(obj.thumbnailsMoveSize, 1);\n        this.thumbnailsOrder = use(obj.thumbnailsOrder, NgxGalleryOrder.Column);\n        this.thumbnailsRemainingCount = use(obj.thumbnailsRemainingCount, false);\n        this.thumbnailsAsLinks = use(obj.thumbnailsAsLinks, false);\n        this.thumbnailsAutoHide = use(obj.thumbnailsAutoHide, false);\n        this.thumbnailMargin = use(obj.thumbnailMargin, 10);\n        this.thumbnailSize = use(obj.thumbnailSize, NgxGalleryImageSize.Cover);\n        if (obj && obj.thumbnailActions && obj.thumbnailActions.length) {\n            obj.thumbnailActions = obj.thumbnailActions.map(action => new NgxGalleryAction(action));\n        }\n        this.thumbnailActions = use(obj.thumbnailActions, []);\n\n        this.preview = use(obj.preview, true);\n        this.previewDescription = use(obj.previewDescription, true);\n        this.previewArrows = use(obj.previewArrows, true);\n        this.previewArrowsAutoHide = use(obj.previewArrowsAutoHide, false);\n        this.previewSwipe = use(obj.previewSwipe, false);\n        this.previewFullscreen = use(obj.previewFullscreen, false);\n        this.previewForceFullscreen = use(obj.previewForceFullscreen, false);\n        this.previewCloseOnClick = use(obj.previewCloseOnClick, false);\n        this.previewCloseOnEsc = use(obj.previewCloseOnEsc, false);\n        this.previewKeyboardNavigation = use(obj.previewKeyboardNavigation, false);\n        this.previewAnimation = use(obj.previewAnimation, true);\n        this.previewAutoPlay = use(obj.previewAutoPlay, false);\n        this.previewAutoPlayInterval = use(obj.previewAutoPlayInterval, 2000);\n        this.previewAutoPlayPauseOnHover = use(obj.previewAutoPlayPauseOnHover, false);\n        this.previewInfinityMove = use(obj.previewInfinityMove, false);\n        this.previewZoom = use(obj.previewZoom, false);\n        this.previewZoomStep = use(obj.previewZoomStep, 0.1);\n        this.previewZoomMax = use(obj.previewZoomMax, 2);\n        this.previewZoomMin = use(obj.previewZoomMin, 0.5);\n        this.previewRotate = use(obj.previewRotate, false);\n        this.previewDownload = use(obj.previewDownload, false);\n        this.previewCustom = use(obj.previewCustom, undefined);\n        this.previewBullets = use(obj.previewBullets, false);\n\n        this.arrowPrevIcon = use(obj.arrowPrevIcon, 'fa fa-arrow-circle-left');\n        this.arrowNextIcon = use(obj.arrowNextIcon, 'fa fa-arrow-circle-right');\n        this.closeIcon = use(obj.closeIcon, 'fa fa-times-circle');\n        this.fullscreenIcon = use(obj.fullscreenIcon, 'fa fa-arrows-alt');\n        this.spinnerIcon = use(obj.spinnerIcon, 'fa fa-spinner fa-pulse fa-3x fa-fw');\n        this.zoomInIcon = use(obj.zoomInIcon, 'fa fa-search-plus');\n        this.zoomOutIcon = use(obj.zoomOutIcon, 'fa fa-search-minus');\n        this.rotateLeftIcon = use(obj.rotateLeftIcon, 'fa fa-undo');\n        this.rotateRightIcon = use(obj.rotateRightIcon, 'fa fa-repeat');\n        this.downloadIcon = use(obj.downloadIcon, 'fa fa-arrow-circle-down');\n\n        if (obj && obj.actions && obj.actions.length) {\n            obj.actions = obj.actions.map(action => new NgxGalleryAction(action));\n        }\n        this.actions = use(obj.actions, []);\n    }\n}\n","import { SafeResourceUrl } from '@angular/platform-browser';\n\nexport interface INgxGalleryOrderedImage {\n    src: string | SafeResourceUrl;\n    index: number;\n}\n\nexport class NgxGalleryOrderedImage implements INgxGalleryOrderedImage {\n    src: string | SafeResourceUrl;\n    index: number;\n\n    constructor(obj: INgxGalleryOrderedImage) {\n        this.src = obj.src;\n        this.index = obj.index;\n    }\n}\n","import { Component, Input, HostListener, ViewChild, OnInit,\n    HostBinding, DoCheck, ElementRef, AfterViewInit, Output, EventEmitter } from '@angular/core';\nimport { SafeResourceUrl } from '@angular/platform-browser';\n\nimport { NgxGalleryPreviewComponent } from './ngx-gallery-preview.component';\nimport { NgxGalleryImageComponent } from './ngx-gallery-image.component';\nimport { NgxGalleryThumbnailsComponent } from './ngx-gallery-thumbnails.component';\nimport { NgxGalleryHelperService } from './ngx-gallery-helper.service';\n\nimport { NgxGalleryOptions } from './ngx-gallery-options.model';\nimport { NgxGalleryImage } from './ngx-gallery-image.model';\nimport { NgxGalleryLayout } from './ngx-gallery-layout.model';\nimport { NgxGalleryOrderedImage } from './ngx-gallery-ordered-image.model';\n\n@Component({\n    selector: 'ngx-gallery',\n    template: `\n    <div class=\"ngx-gallery-layout {{currentOptions?.layout}}\">\n        <ngx-gallery-image *ngIf=\"currentOptions?.image\" [style.height]=\"getImageHeight()\" [images]=\"mediumImages\" [clickable]=\"currentOptions?.preview\" [selectedIndex]=\"selectedIndex\" [arrows]=\"currentOptions?.imageArrows\" [arrowsAutoHide]=\"currentOptions?.imageArrowsAutoHide\" [arrowPrevIcon]=\"currentOptions?.arrowPrevIcon\" [arrowNextIcon]=\"currentOptions?.arrowNextIcon\" [swipe]=\"currentOptions?.imageSwipe\" [animation]=\"currentOptions?.imageAnimation\" [size]=\"currentOptions?.imageSize\" [autoPlay]=\"currentOptions?.imageAutoPlay\" [autoPlayInterval]=\"currentOptions?.imageAutoPlayInterval\" [autoPlayPauseOnHover]=\"currentOptions?.imageAutoPlayPauseOnHover\" [infinityMove]=\"currentOptions?.imageInfinityMove\"  [lazyLoading]=\"currentOptions?.lazyLoading\" [actions]=\"currentOptions?.imageActions\" [descriptions]=\"descriptions\" [showDescription]=\"currentOptions?.imageDescription\" [bullets]=\"currentOptions?.imageBullets\" (onClick)=\"openPreview($event)\" (onActiveChange)=\"selectFromImage($event)\"></ngx-gallery-image>\n\n        <ngx-gallery-thumbnails *ngIf=\"currentOptions?.thumbnails\" [style.marginTop]=\"getThumbnailsMarginTop()\" [style.marginBottom]=\"getThumbnailsMarginBottom()\" [style.height]=\"getThumbnailsHeight()\" [images]=\"smallImages\" [links]=\"currentOptions?.thumbnailsAsLinks ? links : []\" [labels]=\"labels\" [linkTarget]=\"currentOptions?.linkTarget\" [selectedIndex]=\"selectedIndex\" [columns]=\"currentOptions?.thumbnailsColumns\" [rows]=\"currentOptions?.thumbnailsRows\" [margin]=\"currentOptions?.thumbnailMargin\" [arrows]=\"currentOptions?.thumbnailsArrows\" [arrowsAutoHide]=\"currentOptions?.thumbnailsArrowsAutoHide\" [arrowPrevIcon]=\"currentOptions?.arrowPrevIcon\" [arrowNextIcon]=\"currentOptions?.arrowNextIcon\" [clickable]=\"currentOptions?.image || currentOptions?.preview\" [swipe]=\"currentOptions?.thumbnailsSwipe\" [size]=\"currentOptions?.thumbnailSize\" [moveSize]=\"currentOptions?.thumbnailsMoveSize\" [order]=\"currentOptions?.thumbnailsOrder\" [remainingCount]=\"currentOptions?.thumbnailsRemainingCount\" [lazyLoading]=\"currentOptions?.lazyLoading\" [actions]=\"currentOptions?.thumbnailActions\"  (onActiveChange)=\"selectFromThumbnails($event)\"></ngx-gallery-thumbnails>\n\n        <ngx-gallery-preview [images]=\"bigImages\" [descriptions]=\"descriptions\" [showDescription]=\"currentOptions?.previewDescription\" [arrowPrevIcon]=\"currentOptions?.arrowPrevIcon\" [arrowNextIcon]=\"currentOptions?.arrowNextIcon\" [closeIcon]=\"currentOptions?.closeIcon\" [fullscreenIcon]=\"currentOptions?.fullscreenIcon\" [spinnerIcon]=\"currentOptions?.spinnerIcon\" [arrows]=\"currentOptions?.previewArrows\" [arrowsAutoHide]=\"currentOptions?.previewArrowsAutoHide\" [swipe]=\"currentOptions?.previewSwipe\" [fullscreen]=\"currentOptions?.previewFullscreen\" [forceFullscreen]=\"currentOptions?.previewForceFullscreen\" [closeOnClick]=\"currentOptions?.previewCloseOnClick\" [closeOnEsc]=\"currentOptions?.previewCloseOnEsc\" [keyboardNavigation]=\"currentOptions?.previewKeyboardNavigation\" [animation]=\"currentOptions?.previewAnimation\" [autoPlay]=\"currentOptions?.previewAutoPlay\" [autoPlayInterval]=\"currentOptions?.previewAutoPlayInterval\" [autoPlayPauseOnHover]=\"currentOptions?.previewAutoPlayPauseOnHover\" [infinityMove]=\"currentOptions?.previewInfinityMove\" [zoom]=\"currentOptions?.previewZoom\" [zoomStep]=\"currentOptions?.previewZoomStep\" [zoomMax]=\"currentOptions?.previewZoomMax\" [zoomMin]=\"currentOptions?.previewZoomMin\" [zoomInIcon]=\"currentOptions?.zoomInIcon\" [zoomOutIcon]=\"currentOptions?.zoomOutIcon\" [actions]=\"currentOptions?.actions\" [rotate]=\"currentOptions?.previewRotate\" [rotateLeftIcon]=\"currentOptions?.rotateLeftIcon\" [rotateRightIcon]=\"currentOptions?.rotateRightIcon\" [download]=\"currentOptions?.previewDownload\" [downloadIcon]=\"currentOptions?.downloadIcon\" [bullets]=\"currentOptions?.previewBullets\" (onClose)=\"onPreviewClose()\" (onOpen)=\"onPreviewOpen()\" (onActiveChange)=\"previewSelect($event)\" [class.ngx-gallery-active]=\"previewEnabled\"></ngx-gallery-preview>\n    </div>\n    `,\n    styleUrls: ['./ngx-gallery.component.scss'],\n    providers: [NgxGalleryHelperService]\n})\nexport class NgxGalleryComponent implements OnInit, DoCheck, AfterViewInit   {\n    @Input() options: NgxGalleryOptions[];\n    @Input() images: NgxGalleryImage[];\n\n    @Output() imagesReady = new EventEmitter();\n    @Output() change = new EventEmitter<{ index: number; image: NgxGalleryImage; }>();\n    @Output() previewOpen = new EventEmitter();\n    @Output() previewClose = new EventEmitter();\n    @Output() previewChange = new EventEmitter<{ index: number; image: NgxGalleryImage; }>();\n\n    smallImages: string[] | SafeResourceUrl[];\n    mediumImages: NgxGalleryOrderedImage[];\n    bigImages: string[] | SafeResourceUrl[];\n    descriptions: string[];\n    links: string[];\n    labels: string[];\n\n    oldImages: NgxGalleryImage[];\n    oldImagesLength = 0;\n\n    selectedIndex = 0;\n    previewEnabled: boolean;\n\n    currentOptions: NgxGalleryOptions;\n\n    private breakpoint: number | undefined = undefined;\n    private prevBreakpoint: number | undefined = undefined;\n    private fullWidthTimeout: any;\n\n    @ViewChild(NgxGalleryPreviewComponent) preview: NgxGalleryPreviewComponent;\n    @ViewChild(NgxGalleryImageComponent) image: NgxGalleryImageComponent;\n    @ViewChild(NgxGalleryThumbnailsComponent) thubmnails: NgxGalleryThumbnailsComponent;\n\n    @HostBinding('style.width') width: string;\n    @HostBinding('style.height') height: string;\n    @HostBinding('style.left') left: string;\n\n    constructor(private myElement: ElementRef) {}\n\n    ngOnInit() {\n        this.options = this.options.map((opt) => new NgxGalleryOptions(opt));\n        this.sortOptions();\n        this.setBreakpoint();\n        this.setOptions();\n        this.checkFullWidth();\n        if (this.currentOptions) {\n            this.selectedIndex = <number>this.currentOptions.startIndex;\n        }\n    }\n\n    ngDoCheck(): void {\n        if (this.images !== undefined && (this.images.length !== this.oldImagesLength)\n            || (this.images !== this.oldImages)) {\n            this.oldImagesLength = this.images.length;\n            this.oldImages = this.images;\n            this.setOptions();\n            this.setImages();\n\n            if (this.images && this.images.length) {\n                this.imagesReady.emit();\n            }\n\n            if (this.image) {\n                this.image.reset(<number>this.currentOptions.startIndex);\n            }\n\n            if (this.currentOptions.thumbnailsAutoHide && this.currentOptions.thumbnails\n                && this.images.length <= 1) {\n                this.currentOptions.thumbnails = false;\n                this.currentOptions.imageArrows = false;\n            }\n\n            this.resetThumbnails();\n        }\n    }\n\n    ngAfterViewInit(): void {\n        this.checkFullWidth();\n    }\n\n    @HostListener('window:resize') onResize() {\n        this.setBreakpoint();\n\n        if (this.prevBreakpoint !== this.breakpoint) {\n            this.setOptions();\n            this.resetThumbnails();\n        }\n\n        if (this.currentOptions && this.currentOptions.fullWidth) {\n\n            if (this.fullWidthTimeout) {\n                clearTimeout(this.fullWidthTimeout);\n            }\n\n            this.fullWidthTimeout = setTimeout(() => {\n                this.checkFullWidth();\n            }, 200);\n        }\n    }\n\n    getImageHeight(): string {\n        return (this.currentOptions && this.currentOptions.thumbnails) ?\n            this.currentOptions.imagePercent + '%' : '100%';\n    }\n\n    getThumbnailsHeight(): string {\n        if (this.currentOptions && this.currentOptions.image) {\n            return 'calc(' + this.currentOptions.thumbnailsPercent + '% - '\n            + this.currentOptions.thumbnailsMargin + 'px)';\n        } else {\n            return '100%';\n        }\n    }\n\n    getThumbnailsMarginTop(): string {\n        if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsBottom) {\n            return this.currentOptions.thumbnailsMargin + 'px';\n        } else {\n            return '0px';\n        }\n    }\n\n    getThumbnailsMarginBottom(): string {\n        if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsTop) {\n            return this.currentOptions.thumbnailsMargin + 'px';\n        } else {\n            return '0px';\n        }\n    }\n\n    openPreview(index: number): void {\n        if (this.currentOptions.previewCustom) {\n            this.currentOptions.previewCustom(index);\n        } else {\n            this.previewEnabled = true;\n            this.preview.open(index);\n        }\n    }\n\n    onPreviewOpen(): void {\n        this.previewOpen.emit();\n\n        if (this.image && this.image.autoPlay) {\n            this.image.stopAutoPlay();\n        }\n    }\n\n    onPreviewClose(): void {\n        this.previewEnabled = false;\n        this.previewClose.emit();\n\n        if (this.image && this.image.autoPlay) {\n            this.image.startAutoPlay();\n        }\n    }\n\n    selectFromImage(index: number) {\n        this.select(index);\n    }\n\n    selectFromThumbnails(index: number) {\n        this.select(index);\n\n        if (this.currentOptions && this.currentOptions.thumbnails && this.currentOptions.preview\n            && (!this.currentOptions.image || this.currentOptions.thumbnailsRemainingCount)) {\n            this.openPreview(this.selectedIndex);\n        }\n    }\n\n    show(index: number): void {\n        this.select(index);\n    }\n\n    showNext(): void {\n        this.image.showNext();\n    }\n\n    showPrev(): void {\n        this.image.showPrev();\n    }\n\n    canShowNext(): boolean {\n        if (this.images && this.currentOptions) {\n            return (this.currentOptions.imageInfinityMove || this.selectedIndex < this.images.length - 1)\n                ? true : false;\n        } else {\n            return false;\n        }\n    }\n\n    canShowPrev(): boolean {\n        if (this.images && this.currentOptions) {\n            return (this.currentOptions.imageInfinityMove || this.selectedIndex > 0) ? true : false;\n        } else {\n            return false;\n        }\n    }\n\n    previewSelect(index: number) {\n        this.previewChange.emit({index, image: this.images[index]});\n    }\n\n    moveThumbnailsRight() {\n        this.thubmnails.moveRight();\n    }\n\n    moveThumbnailsLeft() {\n        this.thubmnails.moveLeft();\n    }\n\n    canMoveThumbnailsRight() {\n        return this.thubmnails.canMoveRight();\n    }\n\n    canMoveThumbnailsLeft() {\n        return this.thubmnails.canMoveLeft();\n    }\n\n    private resetThumbnails() {\n        if (this.thubmnails) {\n            this.thubmnails.reset(<number>this.currentOptions.startIndex);\n        }\n    }\n\n    private select(index: number) {\n        this.selectedIndex = index;\n\n        this.change.emit({\n            index,\n            image: this.images[index]\n        });\n    }\n\n    private checkFullWidth(): void {\n        if (this.currentOptions && this.currentOptions.fullWidth) {\n            this.width = document.body.clientWidth + 'px';\n            this.left = (-(document.body.clientWidth -\n                this.myElement.nativeElement.parentNode.innerWidth) / 2) + 'px';\n        }\n    }\n\n    private setImages(): void {\n        this.smallImages = this.images.map((img) => <string>img.small);\n        this.mediumImages = this.images.map((img, i) => new NgxGalleryOrderedImage({\n            src: img.medium,\n            index: i\n        }));\n        this.bigImages = this.images.map((img) => <string>img.big);\n        this.descriptions = this.images.map((img) => <string>img.description);\n        this.links = this.images.map((img) => <string>img.url);\n        this.labels = this.images.map((img) => <string>img.label);\n    }\n\n    private setBreakpoint(): void {\n        this.prevBreakpoint = this.breakpoint;\n        let breakpoints;\n\n        if (typeof window !== 'undefined') {\n            breakpoints = this.options.filter((opt) => opt.breakpoint >= window.innerWidth)\n                .map((opt) => opt.breakpoint);\n        }\n\n        if (breakpoints && breakpoints.length) {\n            this.breakpoint = breakpoints.pop();\n        } else {\n            this.breakpoint = undefined;\n        }\n    }\n\n    private sortOptions(): void {\n        this.options = [\n            ...this.options.filter((a) => a.breakpoint === undefined),\n            ...this.options\n                .filter((a) => a.breakpoint !== undefined)\n                .sort((a, b) => b.breakpoint - a.breakpoint)\n        ];\n    }\n\n    private setOptions(): void {\n        this.currentOptions = new NgxGalleryOptions({});\n\n        this.options\n            .filter((opt) => opt.breakpoint === undefined || opt.breakpoint >= this.breakpoint)\n            .map((opt) => this.combineOptions(this.currentOptions, opt));\n\n        this.width = <string>this.currentOptions.width;\n        this.height = <string>this.currentOptions.height;\n    }\n\n    private combineOptions(first: NgxGalleryOptions, second: NgxGalleryOptions) {\n        Object.keys(second).map((val) => first[val] = second[val] !== undefined ? second[val] : first[val]);\n    }\n}\n\n","import { SafeResourceUrl } from '@angular/platform-browser';\n\nexport interface INgxGalleryImage {\n    small?: string | SafeResourceUrl;\n    medium?: string | SafeResourceUrl;\n    big?: string | SafeResourceUrl;\n    description?: string;\n    url?: string;\n    label?: string;\n}\n\nexport class NgxGalleryImage implements INgxGalleryImage {\n    small?: string | SafeResourceUrl;\n    medium?: string | SafeResourceUrl;\n    big?: string | SafeResourceUrl;\n    description?: string;\n    url?: string;\n    label?: string;\n\n    constructor(obj: INgxGalleryImage) {\n        this.small = obj.small;\n        this.medium = obj.medium;\n        this.big = obj.big;\n        this.description = obj.description;\n        this.url = obj.url;\n        this.label = obj.label;\n    }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HammerGestureConfig, HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\n\nimport { NgxGalleryActionComponent } from './ngx-gallery-action.component';\nimport { NgxGalleryArrowsComponent } from './ngx-gallery-arrows.component';\nimport { NgxGalleryBulletsComponent } from './ngx-gallery-bullets.component';\nimport { NgxGalleryImageComponent } from './ngx-gallery-image.component';\nimport { NgxGalleryThumbnailsComponent } from './ngx-gallery-thumbnails.component';\nimport { NgxGalleryPreviewComponent } from './ngx-gallery-preview.component';\nimport { NgxGalleryComponent } from './ngx-gallery.component';\n\nexport * from './ngx-gallery.component';\nexport * from './ngx-gallery-action.component';\nexport * from './ngx-gallery-image.component';\nexport * from './ngx-gallery-thumbnails.component';\nexport * from './ngx-gallery-preview.component';\nexport * from './ngx-gallery-arrows.component';\nexport * from './ngx-gallery-bullets.component';\nexport * from './ngx-gallery-options.model';\nexport * from './ngx-gallery-image.model';\nexport * from './ngx-gallery-animation.model';\nexport * from './ngx-gallery-helper.service';\nexport * from './ngx-gallery-image-size.model';\nexport * from './ngx-gallery-layout.model';\nexport * from './ngx-gallery-order.model';\nexport * from './ngx-gallery-ordered-image.model';\nexport * from './ngx-gallery-action.model';\n\nexport class CustomHammerConfig extends HammerGestureConfig  {\n    overrides = <any>{\n        'pinch': { enable: false },\n        'rotate': { enable: false }\n    };\n}\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        NgxGalleryActionComponent,\n        NgxGalleryArrowsComponent,\n        NgxGalleryBulletsComponent,\n        NgxGalleryImageComponent,\n        NgxGalleryThumbnailsComponent,\n        NgxGalleryPreviewComponent,\n        NgxGalleryComponent\n    ],\n    exports: [\n        NgxGalleryComponent\n    ],\n    providers: [\n        { provide: HAMMER_GESTURE_CONFIG, useClass: CustomHammerConfig }\n    ]\n})\nexport class NgxGalleryModule {}\n"]}